/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package nl.worth.deltares.oss.subversion.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the RepositoryLog service. Represents a row in the &quot;Subversion_RepositoryLog&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>nl.worth.deltares.oss.subversion.model.impl.RepositoryLogModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>nl.worth.deltares.oss.subversion.model.impl.RepositoryLogImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see RepositoryLog
 * @generated
 */
@ProviderType
public interface RepositoryLogModel extends BaseModel<RepositoryLog> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a repository log model instance should use the {@link RepositoryLog} interface instead.
	 */

	/**
	 * Returns the primary key of this repository log.
	 *
	 * @return the primary key of this repository log
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this repository log.
	 *
	 * @param primaryKey the primary key of this repository log
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the log ID of this repository log.
	 *
	 * @return the log ID of this repository log
	 */
	public long getLogId();

	/**
	 * Sets the log ID of this repository log.
	 *
	 * @param logId the log ID of this repository log
	 */
	public void setLogId(long logId);

	/**
	 * Returns the ip address of this repository log.
	 *
	 * @return the ip address of this repository log
	 */
	@AutoEscape
	public String getIpAddress();

	/**
	 * Sets the ip address of this repository log.
	 *
	 * @param ipAddress the ip address of this repository log
	 */
	public void setIpAddress(String ipAddress);

	/**
	 * Returns the screen name of this repository log.
	 *
	 * @return the screen name of this repository log
	 */
	@AutoEscape
	public String getScreenName();

	/**
	 * Sets the screen name of this repository log.
	 *
	 * @param screenName the screen name of this repository log
	 */
	public void setScreenName(String screenName);

	/**
	 * Returns the action of this repository log.
	 *
	 * @return the action of this repository log
	 */
	@AutoEscape
	public String getAction();

	/**
	 * Sets the action of this repository log.
	 *
	 * @param action the action of this repository log
	 */
	public void setAction(String action);

	/**
	 * Returns the create date of this repository log.
	 *
	 * @return the create date of this repository log
	 */
	public long getCreateDate();

	/**
	 * Sets the create date of this repository log.
	 *
	 * @param createDate the create date of this repository log
	 */
	public void setCreateDate(long createDate);

	/**
	 * Returns the repository of this repository log.
	 *
	 * @return the repository of this repository log
	 */
	@AutoEscape
	public String getRepository();

	/**
	 * Sets the repository of this repository log.
	 *
	 * @param repository the repository of this repository log
	 */
	public void setRepository(String repository);

	@Override
	public RepositoryLog cloneWithOriginalValues();

}